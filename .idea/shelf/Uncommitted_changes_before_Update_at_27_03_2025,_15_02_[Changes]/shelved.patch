Index: home-manager/packages.nix
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n    inputs,\n    outputs,\n    lib,\n    config,\n    pkgs,\n    pkgs-unstable,\n    use-cuda,\n    home,\n    lite,\n    ...\n}: \nlet\n    # Adding the local file to the Nix store\n    # wolframSH = builtins.fetchurl {\n    #     url = \"https://raw.githubusercontent.com/Robert-M-Lucas/nix-config/master/home-manager/assets/WolframEngine_13.3.0_LINUX.sh\";\n    #     sha256 = \"96106ac8ed6d0e221a68d846117615c14025320f927e5e0ed95b1965eda68e31\";\n    # };\n\n    # # Overriding the wolfram-engine package to include the file\n    # customWolframEngine = pkgs.wolfram-engine.overrideAttrs (oldAttrs: {\n    #     nativeBuildInputs = oldAttrs.nativeBuildInputs ++ [ wolframSH ];\n    # });\n    pythonEnv = pkgs.python311.withPackages (ps: with ps; [\n        numpy\n        scikit-learn\n        jupyter\n        matplotlib\n        pooch\n        opencv4\n        ffmpeg-python\n        pygobject3\n        keras\n        pygame\n        scikit-image\n        trimesh\n        notebook\n        beautifulsoup4\n        lxml\n        requests\n        termcolor\n        flask\n        pynput\n        pyautogui\n        keyboard\n    ] ++ (if use-cuda then [tensorflowWithCuda] else [tensorflow]));\nin {\n    home.packages = let \n        x = with pkgs; [\n        # ====== GUI Apps ======\n            libreoffice\n            # calibre\n            obsidian\n            pomodoro-gtk\n            krita\n            gimp\n            obs-studio\n            mediawriter\n            rpi-imager\n            # qimgv # Consider removing\n            # libsForQt5.dolphin\n            darktable\n            # qbittorrent # Removed due to vulnerability atm\n            # meld\n            blender\n            qalculate-gtk\n            vesktop\n            # steam - stable version seems to not work\n            blender\n            rare\n            musescore\n            insomnia\n            alacarte\n            prismlauncher\n            gthumb\n            amberol\n            emblem\n            spotify\n\n        # ====== CMD ======\n            platformio-core\n            clang-tools\n            sl\n            # oh-my-fish\n            # gh\n            rustup\n            cloc\n            # neovim\n            # xclip\n            nodejs_22\n            # wolfram-engine\n            ffmpeg\n            # clang\n            # clang-tools\n            # libgcc\n            # gnumake\n            # cmake\n            # extra-cmake-modules\n            # stdenv.cc.cc.lib\n            # zoxide\n            nasm\n            # blas\n            texlive.combined.scheme-full\n            # libsForQt5.qtstyleplugin-kvantum\n            # libsForQt5.qt5ct\n            google-cloud-sdk\n            fortune\n            zip\n            unzip\n            xclip\n            libqalculate\n            gradle\n\n            pkg-config \n\n            libudev-zero\n\n            legendary-gl\n\n            dconf2nix\n\n            qemu\n\n            # rust-analyzer\n\n            spotdl\n\n            lcov\n            \n\n            (writeShellScriptBin \"nix-config\" (builtins.readFile ./scripts/nix-config.sh))\n            (writeShellScriptBin \"nix-clean\" (builtins.readFile ./scripts/nix-clean.sh))\n\n            (writeShellScriptBin \"rust-shell\" (builtins.readFile ./scripts/rust-shell.sh))\n            # (writeShellScriptBin \"shell\" (builtins.readFile ./scripts/shell.sh))\n            # (writeShellScriptBin \"shell-pure\" (builtins.readFile ./scripts/shell-pure.sh))\n            (writeShellScriptBin \"shell-config\" (builtins.readFile ./scripts/shell-config.sh))\n            (writeShellScriptBin \"neofetch\" (builtins.readFile ./scripts/unneofetch.sh))\n            (writeShellScriptBin \"gitf\" (builtins.readFile ./scripts/gitf.sh))\n            \n            # (writeShellScriptBin \"cdd\" (builtins.readFile ./scripts/cdd.sh))\n            # (writeShellScriptBin \"cdu\" (builtins.readFile ./scripts/cdu.sh))\n\n        # ====== IDEs ======\n            jetbrains.rust-rover\n            jetbrains.webstorm\n            jetbrains.jdk\n            jetbrains.clion\n            jetbrains.pycharm-professional\n            jetbrains.pycharm-community\n            android-studio\n            jetbrains.idea-ultimate\n\n        # ====== Extensions ======\n            gnome-shell-extensions\n            gnomeExtensions.ddterm\n            gnomeExtensions.hide-top-bar\n            gnomeExtensions.caffeine\n            gnomeExtensions.vitals\n            # gnomeExtensions.enhanced-osk\n            gnomeExtensions.blur-my-shell\n            gnomeExtensions.appindicator\n            # gnomeExtensions.shutdowntimer\n            gnomeExtensions.color-picker\n            # gnomeExtensions.wintile-beyond\n            # gnomeExtensions.custom-accent-colors\n            \n            # graphite-gtk-theme\n            # gtk-engine-murrine\n            # gnome.gnome-themes-extra\n\n        # (symlinkJoin {\n        #   name = \"dart-symlink\";\n        #   paths = [ dart ];\n        #   symlink = { \"${dart.src}\" = \"/home/robert/dart\"; };\n        # })\n        # (symlinkJoin {\n        #   name = \"flutter-symlink\";\n        #   paths = [ flutter ];\n        #   symlink = { \"${flutter.sdk}/\" = \"/home/robert/flutter\"; };\n        # })\n\n\n        # ====== Other ======\n            diff-so-fancy\n    ];\n\n    y = with pkgs-unstable; [\n        # ====== IDEs ======\n        # davinci-resolve\n        # gephi\n        discord\n        # steam\n    ];\n\n        z = [\n            # overlays.davinci-resolve\n        ];\n\n        non-lite = [\n            pkgs-unstable.jetbrains.goland\n            pkgs-unstable.jetbrains.rider\n            # pkgs-unstable.zed-editor\n            pkgs-unstable.muse-sounds-manager\n            pkgs.wireshark\n            # pkgs.virtualbox\n            pkgs.virt-manager\n            pkgs.arduino-ide\n            pkgs-unstable.dotnet-sdk_9\n\n        # ====== Shell Deps ====== (Prevent shells redownloading)\n\n            pkgs.xorg.libX11\n            pkgs.xorg.libXcursor\n            pkgs.xorg.libXrandr\n            pkgs.xorg.libXi\n            pkgs.xorg.libxcb\n            pkgs.libxkbcommon\n            pkgs.alsa-lib\n            pkgs.libudev-zero\n\n            pkgs.SDL2\n\n            pkgs.shaderc\n            pkgs.directx-shader-compiler\n            pkgs.libGL\n            pkgs.vulkan-headers\n            pkgs.vulkan-loader\n            pkgs.vulkan-tools\n            pkgs.vulkan-tools-lunarg\n            pkgs.vulkan-validation-layers\n\n            pkgs.openssl\n            pkgs.pkg-config\n\n            pkgs.alsa-lib\n        ];\n    in\n        x ++ y ++ z ++ (if lite then [] else non-lite) ++ [pythonEnv];\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/home-manager/packages.nix b/home-manager/packages.nix
--- a/home-manager/packages.nix	(revision 64abcfac741b300af2c3580270d5c34a44750fe5)
+++ b/home-manager/packages.nix	(date 1742826008253)
@@ -76,6 +76,7 @@
             amberol
             emblem
             spotify
+            gnome-clocks
 
         # ====== CMD ======
             platformio-core
